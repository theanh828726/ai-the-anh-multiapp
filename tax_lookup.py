import streamlit as st
import pandas as pd
import requests
from bs4 import BeautifulSoup
import base64
import io

st.set_page_config(page_title="Tra c·ª©u MST - AI Th·∫ø Anh", layout="wide")
st.image("logo.png", use_container_width=True)
st.title("üìë TRA C·ª®U M√É S·ªê THU·∫æ T·ª∞ ƒê·ªòNG")
st.caption("ü§ñ AI Th·∫ø Anh ‚Äì Humanized AI for Business")

uploaded_file = st.file_uploader("üìÇ T·∫£i file Excel ch·ª©a M√£ s·ªë thu·∫ø", type=["xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)
    if "M√£ s·ªë thu·∫ø" not in df.columns:
        st.error("‚ùå File Excel ph·∫£i c√≥ c·ªôt t√™n 'M√£ s·ªë thu·∫ø'")
        st.stop()

    tax_codes = df["M√£ s·ªë thu·∫ø"].dropna().astype(str).tolist()
    st.success(f"‚úÖ ƒê√£ n·∫°p {len(tax_codes)} m√£ s·ªë thu·∫ø.")
    
    api_key = st.secrets.get("AUTOCAPTCHA_API_KEY", "")
    if not api_key:
        api_key = st.text_input("üîë Nh·∫≠p AutoCaptcha API Key:", type="password")
    
    if st.button("üöÄ B·∫Øt ƒë·∫ßu tra c·ª©u"):
        session = requests.Session()
        results = []

        progress = st.progress(0)
        for idx, mst in enumerate(tax_codes):
            captcha_img = session.get("https://tracuunnt.gdt.gov.vn/tcnnt/captcha.jpg").content
            b64_img = base64.b64encode(captcha_img).decode("utf-8")

            payload = {
                "apikey": api_key,
                "base64": b64_img,
                "case": "0",
                "isPhrase": "0",
                "isMath": "0",
                "minLen": "4",
                "maxLen": "6"
            }
            r = requests.post("https://api.autocaptcha.top/funcaptcha/base64", json=payload)
            captcha = r.json().get("result")

            if captcha:
                data = {"mst": mst, "captcha": captcha, "search": "T√¨m ki·∫øm"}
                response = session.post("https://tracuunnt.gdt.gov.vn/tcnnt/mstdn.jsp", data=data)
                soup = BeautifulSoup(response.text, "html.parser")
                table = soup.find("table", {"class": "tableTK"})

                result = {"M√£ s·ªë thu·∫ø": mst}
                if table:
                    for row in table.find_all("tr"):
                        cols = row.find_all("td")
                        if len(cols) >= 2:
                            k = cols[0].get_text(strip=True).replace(":", "")
                            v = cols[1].get_text(strip=True)
                            result[k] = v
                else:
                    result["T√™n ng∆∞·ªùi n·ªôp thu·∫ø"] = "Kh√¥ng t√¨m th·∫•y"

                results.append(result)
            else:
                results.append({"M√£ s·ªë thu·∫ø": mst, "T√™n ng∆∞·ªùi n·ªôp thu·∫ø": "L·ªói CAPTCHA"})

            progress.progress((idx + 1) / len(tax_codes))

        result_df = pd.DataFrame(results)
        st.success("üéâ Ho√†n t·∫•t tra c·ª©u!")
        st.dataframe(result_df)

        output = io.BytesIO()
        with pd.ExcelWriter(output, engine='openpyxl') as writer:
            result_df.to_excel(writer, index=False, sheet_name="K·∫øt qu·∫£")
        st.download_button(
            label="üì• T·∫£i file Excel k·∫øt qu·∫£",
            data=output.getvalue(),
            file_name="ket_qua_tra_cuu_mst.xlsx",
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        )